// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: List renders properly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <List
    columnDefs={
      Array [
        Object {
          "field": "uuid",
          "headerName": "uuid",
          "hide": true,
        },
        Object {
          "field": "name.givenName",
          "headerName": "Given Name",
        },
        Object {
          "field": "name.familyName",
          "headerName": "Family Name",
        },
        Object {
          "field": "gender",
          "headerName": "Gender",
        },
        Object {
          "field": "age",
          "headerName": "Age",
        },
      ]
    }
    delayInterval={60000}
    dispatch={[Function]}
    fetchListActionCreator={[Function]}
    filters={Array []}
    rowData={Array []}
    title="List"
  >
    <div>
      <h3>
        <Label
          bsClass="label"
          bsStyle="default"
        >
          <span
            className="label label-default"
          >
            List
          </span>
        </Label>
      </h3>
      <h3>
        <Label
          bsClass="label"
          bsStyle="default"
        >
          <span
            className="label label-default hidden"
          />
        </Label>
      </h3>
      <Connect(DataGrid)
        columnDefs={
          Array [
            Object {
              "field": "uuid",
              "headerName": "uuid",
              "hide": true,
            },
            Object {
              "field": "name.givenName",
              "headerName": "Given Name",
            },
            Object {
              "field": "name.familyName",
              "headerName": "Family Name",
            },
            Object {
              "field": "gender",
              "headerName": "Gender",
            },
            Object {
              "field": "age",
              "headerName": "Age",
            },
          ]
        }
        filters={
          <div>
            <ButtonToolbar
              bsClass="btn-toolbar"
            >
              <Uncontrolled(ToggleButtonGroup)
                onChange={[Function]}
                type="checkbox"
              />
            </ButtonToolbar>
          </div>
        }
        rowData={Array []}
      >
        <DataGrid
          columnDefs={
            Array [
              Object {
                "field": "uuid",
                "headerName": "uuid",
                "hide": true,
              },
              Object {
                "field": "name.givenName",
                "headerName": "Given Name",
              },
              Object {
                "field": "name.familyName",
                "headerName": "Family Name",
              },
              Object {
                "field": "gender",
                "headerName": "Gender",
              },
              Object {
                "field": "age",
                "headerName": "Age",
              },
            ]
          }
          dispatch={[Function]}
          filters={
            <div>
              <ButtonToolbar
                bsClass="btn-toolbar"
              >
                <Uncontrolled(ToggleButtonGroup)
                  onChange={[Function]}
                  type="checkbox"
                />
              </ButtonToolbar>
            </div>
          }
          rowData={Array []}
        >
          <div>
            <Grid
              bsClass="container"
              componentClass="div"
              fluid={false}
            >
              <div
                className="container"
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <div
                    className="row"
                  >
                    <FormGroup
                      bsClass="form-group"
                      controlId="searchAndFilterForm"
                    >
                      <div
                        className="form-group"
                      >
                        <Col
                          bsClass="col"
                          componentClass={[Function]}
                          sm={1}
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          <ControlLabel
                            bsClass="control-label"
                            className="col-sm-1"
                            srOnly={false}
                            style={
                              Object {
                                "textAlign": "right",
                              }
                            }
                          >
                            <label
                              className="col-sm-1 control-label"
                              htmlFor="searchAndFilterForm"
                              style={
                                Object {
                                  "textAlign": "right",
                                }
                              }
                            >
                              Search:
                            </label>
                          </ControlLabel>
                        </Col>
                        <Col
                          bsClass="col"
                          componentClass="div"
                          sm={3}
                          style={
                            Object {
                              "textAlign": "left",
                            }
                          }
                        >
                          <div
                            className="col-sm-3"
                            style={
                              Object {
                                "textAlign": "left",
                              }
                            }
                          >
                            <input
                              onChange={[Function]}
                              type="text"
                            />
                          </div>
                        </Col>
                        <Col
                          bsClass="col"
                          componentClass={[Function]}
                          sm={1}
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          <ControlLabel
                            bsClass="control-label"
                            className="col-sm-1"
                            srOnly={false}
                            style={
                              Object {
                                "textAlign": "right",
                              }
                            }
                          >
                            <label
                              className="col-sm-1 control-label"
                              htmlFor="searchAndFilterForm"
                              style={
                                Object {
                                  "textAlign": "right",
                                }
                              }
                            >
                              Filter:
                            </label>
                          </ControlLabel>
                        </Col>
                        <Col
                          bsClass="col"
                          componentClass="div"
                          sm={6}
                        >
                          <div
                            className="col-sm-6"
                          >
                            <div>
                              <ButtonToolbar
                                bsClass="btn-toolbar"
                              >
                                <div
                                  className="btn-toolbar"
                                  role="toolbar"
                                >
                                  <Uncontrolled(ToggleButtonGroup)
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <ToggleButtonGroup
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <ButtonGroup
                                        block={false}
                                        bsClass="btn-group"
                                        data-toggle="buttons"
                                        justified={false}
                                        vertical={false}
                                      >
                                        <div
                                          className="btn-group"
                                          data-toggle="buttons"
                                        />
                                      </ButtonGroup>
                                    </ToggleButtonGroup>
                                  </Uncontrolled(ToggleButtonGroup)>
                                </div>
                              </ButtonToolbar>
                            </div>
                          </div>
                        </Col>
                      </div>
                    </FormGroup>
                  </div>
                </Row>
              </div>
            </Grid>
            <div
              className="grid-wrapper"
              id="omrsGrid"
            >
              <AgGridReact
                animateRows={true}
                columnDefs={
                  Array [
                    Object {
                      "field": "uuid",
                      "headerName": "uuid",
                      "hide": true,
                    },
                    Object {
                      "field": "name.givenName",
                      "headerName": "Given Name",
                    },
                    Object {
                      "field": "name.familyName",
                      "headerName": "Family Name",
                    },
                    Object {
                      "field": "gender",
                      "headerName": "Gender",
                    },
                    Object {
                      "field": "age",
                      "headerName": "Age",
                    },
                  ]
                }
                enableFiltering={true}
                enableSorting={true}
                id="omrsGrid"
                onFilterChanged={[Function]}
                onGridReady={[Function]}
                onGridSizeChanged={[Function]}
                onRowDataChanged={[Function]}
                onSelectionChanged={[Function]}
                rowClassRules="rowClassRules"
                rowData={Array []}
                rowSelection="single"
                style="width: 100%; height: 100%;"
              >
                <div
                  style={
                    Object {
                      "height": "100%",
                    }
                  }
                />
              </AgGridReact>
            </div>
          </div>
        </DataGrid>
      </Connect(DataGrid)>
    </div>
  </List>
</Provider>
`;
